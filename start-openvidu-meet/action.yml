name: Start OpenVidu Meet
description: Checkout and optionally start OpenVidu Meet and wait for it to be ready
inputs:
  timeout:
    description: Maximum time to wait for OpenVidu Meet to start (in milliseconds)
    required: false
    default: '60000'
  skip_backend_start:
    description: Skip starting the backend server (only build and prepare)
    required: false
    default: 'false'
  skip_install:
    description: Skip installing dependencies (assumes they are already installed)
    required: false
    default: 'false'
  build_components_angular:
    description: Build and include latest OpenVidu Components Angular library in frontend
    required: false
    default: 'true'
  components_checkout_ref:
    description: Branch, tag, or commit to checkout for OpenVidu Components Angular
    required: false
    default: 'master'
  components_artifact_name:
    description: Name of existing artifact with OpenVidu Components Angular package (if provided, skips building)
    required: false
runs:
  using: 'composite'
  steps:
    - name: Build OpenVidu Components Angular
      if: ${{ inputs.build_components_angular == 'true' && inputs.components_artifact_name == '' }}
      id: build_components
      uses: OpenVidu/actions/build-openvidu-components-angular@main
      with:
        checkout_ref: ${{ inputs.components_checkout_ref }}
        artifact_name: 'openvidu-components-angular-temp'

    - name: Checkout OpenVidu Meet
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}

    - name: Download OpenVidu Components Angular
      if: ${{ inputs.build_components_angular == 'true' }}
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.components_artifact_name != '' && inputs.components_artifact_name || steps.build_components.outputs.artifact_name }}
        path: meet-ce/frontend

    - name: Install Custom OpenVidu Components Angular
      if: ${{ inputs.build_components_angular == 'true' }}
      shell: bash
      run: ./meet.sh prepare-ci-build --components-angular-tarball ./meet-ce/frontend/openvidu-components-angular.tgz


    - name: Clean up artifacts (Built)
      if: ${{ inputs.build_components_angular == 'true' && inputs.components_artifact_name == '' && always() }}
      uses: geekyeggo/delete-artifact@v5
      with:
        name: ${{ steps.build_components.outputs.artifact_name }}

    - name: Install dependencies
      if: ${{ inputs.skip_install != 'true' }}
      shell: bash
      run: pnpm install --no-frozen-lockfile

    - name: Build OpenVidu Meet
      shell: bash
      run: ./meet.sh build --skip-install

    - name: Start OpenVidu Meet
      if: ${{ inputs.skip_backend_start != 'true' }}
      shell: bash
      run: ./meet.sh start --ci --skip-install > meet_backend.log 2>&1 &

    - name: Wait for OpenVidu Meet to Start
      if: ${{ inputs.skip_backend_start != 'true' }}
      shell: bash
      run: |
        echo "Waiting for OpenVidu Meet to be available at http://localhost:6080/health..."
        timeout_ms=${{ inputs.timeout }}
        timeout_s=$((timeout_ms / 1000))
        start_time=$(date +%s)

        while true; do
          if curl -s -f http://localhost:6080/health > /dev/null 2>&1; then
            echo "OpenVidu Meet is up and running!"
            break
          fi

          current_time=$(date +%s)
          elapsed=$((current_time - start_time))

          if [ $elapsed -ge $timeout_s ]; then
            echo "Timeout: OpenVidu Meet did not start within ${timeout_s} seconds"
            exit 1
          fi

          echo "Waiting... (${elapsed}s/${timeout_s}s)"
          sleep 5
        done
